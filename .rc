# Nix
if [ -e '/nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh' ]; then
  . '/nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh'
fi

# PATH
export PATH="$HOME/bin:$PATH"
export PATH="$HOME/.local/bin:$PATH"
export PATH="$HOME/.mint/bin:$PATH"
export PATH="$HOME/go/bin:$PATH"

# Misc. variables
export LC_ALL=en_US.UTF-8
if command -v nvim &> /dev/null; then
    export EDITOR="nvim"
fi
export PS1="$0 $ "
export HOMEBREW_INSTALL_FROM_API=1

## The Nix Fixâ„¢
if [ -z "$LOCALE_ARCHIVE" ]; then
    export LOCALE_ARCHIVE=/usr/lib/locale/locale-archive
fi

# Aliases
alias ll='ls -lAGFh'
alias die='sudo shutdown -h now'

alias mongorun='mongod --config /usr/local/etc/mongod.conf'
alias redisrun='redis-server /usr/local/etc/redis.conf'

## PowerShell
psh() {
    if command -v powershell.exe; then
        powershell.exe $@
    else
        powershell $@
    fi
}

## Neovim
if command -v nvim &> /dev/null; then
    alias vim='nvim';
fi

## Open
if ! command -v open &> /dev/null; then
    if command -v xdg-open &> /dev/null; then
        alias open=xdg-open
    fi
fi

## Nix
if command -v nix-shell &> /dev/null; then
    alias nix-zsh="nix-shell --run 'zsh'"
fi

if command -v nix &> /dev/null; then
    nix-path() {
        if [ -z "$@" ]; then
            echo "Usage: $0 <pkg>"
            return 64
        fi
        nix --extra-experimental-features nix-command eval -f '<nixpkgs>' --raw $1
    }
fi

## NixOS/Nix-Darwin
if command -v nixos-rebuild &> /dev/null; then
    alias nixos-apply="sudo nixos-rebuild switch"
fi

if command -v darwin-rebuild &> /dev/null; then
    alias darwin-apply="darwin-rebuild switch -I darwin-config=$HOME/nix-conf/darwin-configuration.nix"
fi

[[ "$TERM" == "xterm-kitty" ]] && alias kssh="kitty +kitten ssh"

# Shortcuts
c() {
    LOC=${1:-.}
    code "$(python3 -c 'import os,sys;print(os.path.realpath(sys.argv[1]))' $LOC)"
}

pyv() {
    if [ -f ./venv/bin/activate ]; then
    	source ./venv/bin/activate
    else
    	echo "No venv here."
    fi
}

pgr() {
    ps aux | grep $@
}

git-rprune() {
    git fetch -p &&\
        git branch -vv | grep 'gone' | awk '{print $1}' | xargs git branch -D
}

gh-size() {
    if [ -z "$@" ]; then
        echo "Usage: ghsize <repo>/<owner>"
        return 64
    fi
    curl -s https://api.github.com/repos/$1 | jq .size | numfmt --to=si --from-unit=1000
}
